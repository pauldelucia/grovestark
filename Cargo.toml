[package]
name = "grovestark"
version = "0.1.0"
edition = "2021"
authors = ["Paul DeLucia"]
description = "Custom STARK prover for Dash Platform GroveDB proofs"
license = "MIT"
repository = "https://github.com/pauldelucia/grovestark"
keywords = ["stark", "zero-knowledge", "cryptography", "dash", "grovedb"]
categories = ["cryptography"]

[dependencies]
# Core cryptographic primitives
blake3 = "1.5"
sha2 = "0.10"
ed25519-dalek = { version = "2.1", features = ["serde", "batch"] }
curve25519-dalek = "4.1"
subtle = "2.6"
zeroize = "1.8"

# Field arithmetic and polynomials
ark-ff = "0.4"
winterfell = { version = "0.13.1", features = ["concurrent"] }
num-bigint = "0.4"
num-traits = "0.2"
once_cell = "1.19"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = { version = "=2.0.0-rc.3" }
# Serde-based bincode 1.x for our own proof serialization in tests/examples
bincode1 = { version = "1.3", package = "bincode" }
hex = "0.4"
base64 = "0.22"
bs58 = "0.5"

# GroveDB and Merk decoders
grovedb = "3.0.0"
grovedb-merk = { version = "3.0.0", package = "grovedb-merk" }
grovedb-costs = "3.0.0"

# Dash SDK
dash-sdk = { git = "https://github.com/dashpay/platform", tag = "v2.0.1" }

# Error handling
thiserror = "1.0"

# Performance
rayon = "1.8"
num_cpus = "1.16"

# Random
rand = "0.8"

# Logging
log = "0.4"
env_logger = "0.11"
tracing = { version = "0.1", default-features = false, features = ["attributes"] }
tracing-subscriber = { version = "0.3", features = ["std", "env-filter"] }

# Async runtime
tokio = { version = "1.46", features = ["rt-multi-thread", "macros", "time"] }

# Benchmarking
criterion = { version = "0.5", optional = true }

[dev-dependencies]
assert_matches = "1.5"
pretty_assertions = "1.4"
tempfile = "3.8"
criterion = "0.5"
ed25519-dalek = "2.1.1"
curve25519-dalek = { version = "4", default-features = false, features = ["alloc"] }
rand_core = "0.6"
rand_chacha = "0.3"
hex = "0.4"

[features]
default = []
bench = ["criterion"]
tripwire = []
tripwire_perf = []
validate_trace = []  # Enable trace validation (slow, use only for debugging)
assertion_sentinel = []  # Add impossible boundary assertion to test if assertions are enforced
# OPTIMIZATIONS
short_trace = []  # Use 16384 rows instead of 65536 for faster debugging
skip_eddsa = []   # Skip EdDSA phase for Merkle/BLAKE3 debugging
quiet_eval = []   # Disable verbose logging in constraint evaluation
hotlog = []       # Enable debug logging in hot paths (normally disabled)
panic_in_transition = []  # Test if evaluate_transition is called in CE pipeline
must_fail_test = []  # Force constraint evaluation to fail for testing
fri_only_must_fail = []  # FRI-only must-fail test (GUIDANCE.md)
wf_dbg = []  # Enable winterfell debug module for OOD frame debugging

[patch.crates-io]
elliptic-curve-tools = { git = "https://github.com/mikelodder7/elliptic-curve-tools", rev = "c989865fa71503d2cbf5c5795c4ebcf4a2f3221c" }

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
# Enable native CPU instructions for maximum performance
# Uncomment the next line if you want CPU-specific optimizations
# rustflags = ["-C", "target-cpu=native"]

[profile.bench]
inherits = "release"

[alias]
# Run all tests in release mode with output
tr = "test --release -- --nocapture"
# Common subsets
tr-ci = "test --release -q"

[[bench]]
name = "comprehensive_benchmarks"
harness = false
required-features = ["bench"]

[[bench]]
name = "quick_benchmarks"
harness = false
required-features = ["bench"]
